# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Probably.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(483, 643)
        MainWindow.setAutoFillBackground(False)
        MainWindow.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.tab_list = QtWidgets.QTabWidget(self.centralwidget)
        self.tab_list.setGeometry(QtCore.QRect(0, 10, 481, 641))
        self.tab_list.setStyleSheet("color: rgb(0, 0, 0);")
        self.tab_list.setObjectName("tab_list")
        self.tab_probability = QtWidgets.QWidget()
        self.tab_probability.setObjectName("tab_probability")
        self.lbl_result_probability = QtWidgets.QLabel(self.tab_probability)
        self.lbl_result_probability.setGeometry(QtCore.QRect(130, 420, 231, 16))
        self.lbl_result_probability.setStyleSheet("background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);")
        self.lbl_result_probability.setAlignment(QtCore.Qt.AlignCenter)
        self.lbl_result_probability.setObjectName("lbl_result_probability")
        self.btn_calc_probability = QtWidgets.QPushButton(self.tab_probability)
        self.btn_calc_probability.setGeometry(QtCore.QRect(220, 350, 51, 51))
        self.btn_calc_probability.setStyleSheet("    border: 2px solid #555;\n"
"    border-radius: 20px;\n"
"    border-style: outset;\n"
"    background: qradialgradient(\n"
"        cx: 0.3, cy: -0.4, fx: 0.3, fy: -0.4,\n"
"        radius: 1.35, stop: 0 #fff, stop: 1 #888\n"
"        );\n"
"    padding: 5px;\n"
"background-color: rgb(255, 255, 255);")
        self.btn_calc_probability.setText("")
        self.btn_calc_probability.setObjectName("btn_calc_probability")
        self.lbl_param_1_probability = QtWidgets.QLabel(self.tab_probability)
        self.lbl_param_1_probability.setGeometry(QtCore.QRect(30, 260, 211, 20))
        self.lbl_param_1_probability.setStyleSheet("background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);;")
        self.lbl_param_1_probability.setAlignment(QtCore.Qt.AlignCenter)
        self.lbl_param_1_probability.setObjectName("lbl_param_1_probability")
        self.lbl_param_2_probability = QtWidgets.QLabel(self.tab_probability)
        self.lbl_param_2_probability.setGeometry(QtCore.QRect(240, 260, 211, 20))
        self.lbl_param_2_probability.setStyleSheet("background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);")
        self.lbl_param_2_probability.setAlignment(QtCore.Qt.AlignCenter)
        self.lbl_param_2_probability.setObjectName("lbl_param_2_probability")
        self.probability_combo_asked_param = QtWidgets.QComboBox(self.tab_probability)
        self.probability_combo_asked_param.setGeometry(QtCore.QRect(80, 190, 341, 22))
        self.probability_combo_asked_param.setStyleSheet("background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);")
        self.probability_combo_asked_param.setObjectName("probability_combo_asked_param")
        self.probability_combo_asked_param.addItem("")
        self.probability_combo_asked_param.addItem("")
        self.probability_combo_asked_param.addItem("")
        self.probability_combo_asked_param.addItem("")
        self.lbl_probability_chosen_option = QtWidgets.QLabel(self.tab_probability)
        self.lbl_probability_chosen_option.setGeometry(QtCore.QRect(120, 150, 271, 16))
        self.lbl_probability_chosen_option.setStyleSheet("background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);")
        self.lbl_probability_chosen_option.setObjectName("lbl_probability_chosen_option")
        self.label_title_probability = QtWidgets.QLabel(self.tab_probability)
        self.label_title_probability.setGeometry(QtCore.QRect(110, 30, 291, 101))
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(28)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.label_title_probability.setFont(font)
        self.label_title_probability.setStyleSheet("color: rgb(0, 0, 0);")
        self.label_title_probability.setObjectName("label_title_probability")
        self.line_param_probability_1 = QtWidgets.QLineEdit(self.tab_probability)
        self.line_param_probability_1.setGeometry(QtCore.QRect(90, 280, 91, 22))
        self.line_param_probability_1.setStyleSheet("background-color: rgb(192, 192, 192); color: rgb(0, 0, 0);")
        self.line_param_probability_1.setObjectName("line_param_probability_1")
        self.line_param_probability_2 = QtWidgets.QLineEdit(self.tab_probability)
        self.line_param_probability_2.setGeometry(QtCore.QRect(300, 280, 91, 22))
        self.line_param_probability_2.setStyleSheet("background-color: rgb(192, 192, 192); color: rgb(0, 0, 0);")
        self.line_param_probability_2.setObjectName("line_param_probability_2")
        self.tab_list.addTab(self.tab_probability, "")
        self.tab_conditional = QtWidgets.QWidget()
        self.tab_conditional.setObjectName("tab_conditional")
        self.btn_calc_conditional = QtWidgets.QPushButton(self.tab_conditional)
        self.btn_calc_conditional.setGeometry(QtCore.QRect(220, 360, 51, 51))
        self.btn_calc_conditional.setStyleSheet("    border: 2px solid #555;\n"
"    border-radius: 20px;\n"
"    border-style: outset;\n"
"    background: qradialgradient(\n"
"        cx: 0.3, cy: -0.4, fx: 0.3, fy: -0.4,\n"
"        radius: 1.35, stop: 0 #fff, stop: 1 #888\n"
"        );\n"
"    padding: 5px;\n"
"background-color: rgb(255, 255, 255);")
        self.btn_calc_conditional.setText("")
        self.btn_calc_conditional.setObjectName("btn_calc_conditional")
        self.lbl_conditional_chosen_option_2 = QtWidgets.QLabel(self.tab_conditional)
        self.lbl_conditional_chosen_option_2.setGeometry(QtCore.QRect(130, 170, 231, 16))
        self.lbl_conditional_chosen_option_2.setStyleSheet("background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);")
        self.lbl_conditional_chosen_option_2.setObjectName("lbl_conditional_chosen_option_2")
        self.lbl_result_conditional = QtWidgets.QLabel(self.tab_conditional)
        self.lbl_result_conditional.setGeometry(QtCore.QRect(130, 430, 231, 16))
        self.lbl_result_conditional.setStyleSheet("background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);")
        self.lbl_result_conditional.setAlignment(QtCore.Qt.AlignCenter)
        self.lbl_result_conditional.setObjectName("lbl_result_conditional")
        self.lbl_param_1_conditional = QtWidgets.QLabel(self.tab_conditional)
        self.lbl_param_1_conditional.setGeometry(QtCore.QRect(130, 260, 81, 16))
        self.lbl_param_1_conditional.setStyleSheet("background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);")
        self.lbl_param_1_conditional.setObjectName("lbl_param_1_conditional")
        self.lbl_param_2_conditional = QtWidgets.QLabel(self.tab_conditional)
        self.lbl_param_2_conditional.setGeometry(QtCore.QRect(280, 260, 81, 16))
        self.lbl_param_2_conditional.setStyleSheet("background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);")
        self.lbl_param_2_conditional.setObjectName("lbl_param_2_conditional")
        self.conditional_combo_asked_param = QtWidgets.QComboBox(self.tab_conditional)
        self.conditional_combo_asked_param.setGeometry(QtCore.QRect(210, 200, 73, 22))
        self.conditional_combo_asked_param.setStyleSheet("background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);")
        self.conditional_combo_asked_param.setObjectName("conditional_combo_asked_param")
        self.conditional_combo_asked_param.addItem("")
        self.conditional_combo_asked_param.addItem("")
        self.conditional_combo_asked_param.addItem("")
        self.conditional_combo_asked_param.addItem("")
        self.label_title_conditional = QtWidgets.QLabel(self.tab_conditional)
        self.label_title_conditional.setGeometry(QtCore.QRect(130, 40, 251, 101))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(28)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.label_title_conditional.setFont(font)
        self.label_title_conditional.setStyleSheet("color: rgb(0, 0, 0);")
        self.label_title_conditional.setObjectName("label_title_conditional")
        self.line_param_conditional_1 = QtWidgets.QLineEdit(self.tab_conditional)
        self.line_param_conditional_1.setGeometry(QtCore.QRect(130, 290, 91, 22))
        self.line_param_conditional_1.setStyleSheet("background-color: rgb(192, 192, 192); color: rgb(0, 0, 0);")
        self.line_param_conditional_1.setObjectName("line_param_conditional_1")
        self.line_param_conditional_2 = QtWidgets.QLineEdit(self.tab_conditional)
        self.line_param_conditional_2.setGeometry(QtCore.QRect(270, 290, 91, 22))
        self.line_param_conditional_2.setStyleSheet("background-color: rgb(192, 192, 192); color: rgb(0, 0, 0);")
        self.line_param_conditional_2.setObjectName("line_param_conditional_2")
        self.tab_list.addTab(self.tab_conditional, "")
        self.tab_bayes = QtWidgets.QWidget()
        self.tab_bayes.setObjectName("tab_bayes")
        self.lbl_result_bayes = QtWidgets.QLabel(self.tab_bayes)
        self.lbl_result_bayes.setGeometry(QtCore.QRect(120, 420, 231, 16))
        self.lbl_result_bayes.setStyleSheet("background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);")
        self.lbl_result_bayes.setAlignment(QtCore.Qt.AlignCenter)
        self.lbl_result_bayes.setObjectName("lbl_result_bayes")
        self.lbl_param_1_bayes = QtWidgets.QLabel(self.tab_bayes)
        self.lbl_param_1_bayes.setGeometry(QtCore.QRect(100, 280, 81, 16))
        self.lbl_param_1_bayes.setStyleSheet("background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);")
        self.lbl_param_1_bayes.setObjectName("lbl_param_1_bayes")
        self.lbl_bayes_chosen_option = QtWidgets.QLabel(self.tab_bayes)
        self.lbl_bayes_chosen_option.setGeometry(QtCore.QRect(130, 160, 231, 16))
        self.lbl_bayes_chosen_option.setStyleSheet("background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);")
        self.lbl_bayes_chosen_option.setObjectName("lbl_bayes_chosen_option")
        self.lbl_param_3_bayes = QtWidgets.QLabel(self.tab_bayes)
        self.lbl_param_3_bayes.setGeometry(QtCore.QRect(290, 280, 81, 16))
        self.lbl_param_3_bayes.setStyleSheet("background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);")
        self.lbl_param_3_bayes.setObjectName("lbl_param_3_bayes")
        self.lbl_param_2_bayes = QtWidgets.QLabel(self.tab_bayes)
        self.lbl_param_2_bayes.setGeometry(QtCore.QRect(200, 280, 81, 16))
        self.lbl_param_2_bayes.setStyleSheet("background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);")
        self.lbl_param_2_bayes.setObjectName("lbl_param_2_bayes")
        self.bayes_combo_asked_param = QtWidgets.QComboBox(self.tab_bayes)
        self.bayes_combo_asked_param.setGeometry(QtCore.QRect(210, 190, 73, 22))
        self.bayes_combo_asked_param.setStyleSheet("background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);")
        self.bayes_combo_asked_param.setObjectName("bayes_combo_asked_param")
        self.bayes_combo_asked_param.addItem("")
        self.bayes_combo_asked_param.addItem("")
        self.bayes_combo_asked_param.addItem("")
        self.bayes_combo_asked_param.addItem("")
        self.bayes_combo_asked_param.addItem("")
        self.btn_calc_bayes = QtWidgets.QPushButton(self.tab_bayes)
        self.btn_calc_bayes.setGeometry(QtCore.QRect(210, 350, 51, 51))
        self.btn_calc_bayes.setStyleSheet("    border: 2px solid #555;\n"
"    border-radius: 20px;\n"
"    border-style: outset;\n"
"    background: qradialgradient(\n"
"        cx: 0.3, cy: -0.4, fx: 0.3, fy: -0.4,\n"
"        radius: 1.35, stop: 0 #fff, stop: 1 #888\n"
"        );\n"
"    padding: 5px;\n"
"background-color: rgb(255, 255, 255);")
        self.btn_calc_bayes.setText("")
        self.btn_calc_bayes.setObjectName("btn_calc_bayes")
        self.label_title_bayes = QtWidgets.QLabel(self.tab_bayes)
        self.label_title_bayes.setGeometry(QtCore.QRect(130, 30, 251, 101))
        font = QtGui.QFont()
        font.setFamily("Ubuntu")
        font.setPointSize(48)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.label_title_bayes.setFont(font)
        self.label_title_bayes.setStyleSheet("color: rgb(0, 0, 0);")
        self.label_title_bayes.setObjectName("label_title_bayes")
        self.line_param_bayes_1 = QtWidgets.QLineEdit(self.tab_bayes)
        self.line_param_bayes_1.setGeometry(QtCore.QRect(90, 310, 91, 22))
        self.line_param_bayes_1.setStyleSheet("background-color: rgb(192, 192, 192); color: rgb(0, 0, 0);")
        self.line_param_bayes_1.setObjectName("line_param_bayes_1")
        self.line_param_bayes_2 = QtWidgets.QLineEdit(self.tab_bayes)
        self.line_param_bayes_2.setGeometry(QtCore.QRect(190, 310, 91, 22))
        self.line_param_bayes_2.setStyleSheet("background-color: rgb(192, 192, 192); color: rgb(0, 0, 0);")
        self.line_param_bayes_2.setObjectName("line_param_bayes_2")
        self.line_param_bayes_3 = QtWidgets.QLineEdit(self.tab_bayes)
        self.line_param_bayes_3.setGeometry(QtCore.QRect(290, 310, 91, 22))
        self.line_param_bayes_3.setStyleSheet("background-color: rgb(192, 192, 192); color: rgb(0, 0, 0);")
        self.line_param_bayes_3.setObjectName("line_param_bayes_3")
        self.tab_list.addTab(self.tab_bayes, "")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        self.tab_list.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.lbl_result_probability.setText(_translate("MainWindow", "RESULT"))
        self.lbl_param_1_probability.setText(_translate("MainWindow", "Parameter 1"))
        self.lbl_param_2_probability.setText(_translate("MainWindow", "Parameter 2"))
        self.probability_combo_asked_param.setCurrentText(_translate("MainWindow", "-"))
        self.probability_combo_asked_param.setItemText(0, _translate("MainWindow", "-"))
        self.probability_combo_asked_param.setItemText(1, _translate("MainWindow", "P(A)"))
        self.probability_combo_asked_param.setItemText(2, _translate("MainWindow", "Number of favorable outcomes to A"))
        self.probability_combo_asked_param.setItemText(3, _translate("MainWindow", "Total number of Outcomes"))
        self.lbl_probability_chosen_option.setText(_translate("MainWindow", "Please input the parameters in question"))
        self.label_title_probability.setText(_translate("MainWindow", "Probability"))
        self.tab_list.setTabText(self.tab_list.indexOf(self.tab_probability), _translate("MainWindow", "Probability"))
        self.lbl_conditional_chosen_option_2.setText(_translate("MainWindow", "Please input the parameters in question"))
        self.lbl_result_conditional.setText(_translate("MainWindow", "RESULT"))
        self.lbl_param_1_conditional.setText(_translate("MainWindow", "Parameter 1"))
        self.lbl_param_2_conditional.setText(_translate("MainWindow", "Parameter 2"))
        self.conditional_combo_asked_param.setCurrentText(_translate("MainWindow", "-"))
        self.conditional_combo_asked_param.setItemText(0, _translate("MainWindow", "-"))
        self.conditional_combo_asked_param.setItemText(1, _translate("MainWindow", "P(A|B)"))
        self.conditional_combo_asked_param.setItemText(2, _translate("MainWindow", "P(A ∩ B)"))
        self.conditional_combo_asked_param.setItemText(3, _translate("MainWindow", "P(B)"))
        self.label_title_conditional.setText(_translate("MainWindow", "Conditional"))
        self.tab_list.setTabText(self.tab_list.indexOf(self.tab_conditional), _translate("MainWindow", "Conditional"))
        self.lbl_result_bayes.setText(_translate("MainWindow", "RESULT"))
        self.lbl_param_1_bayes.setText(_translate("MainWindow", "Parameter 1"))
        self.lbl_bayes_chosen_option.setText(_translate("MainWindow", "Please input the parameters in question"))
        self.lbl_param_3_bayes.setText(_translate("MainWindow", "Parameter 3"))
        self.lbl_param_2_bayes.setText(_translate("MainWindow", "Parameter 2"))
        self.bayes_combo_asked_param.setCurrentText(_translate("MainWindow", "-"))
        self.bayes_combo_asked_param.setItemText(0, _translate("MainWindow", "-"))
        self.bayes_combo_asked_param.setItemText(1, _translate("MainWindow", "P(A)"))
        self.bayes_combo_asked_param.setItemText(2, _translate("MainWindow", "P(B)"))
        self.bayes_combo_asked_param.setItemText(3, _translate("MainWindow", "P(A|B)"))
        self.bayes_combo_asked_param.setItemText(4, _translate("MainWindow", "P(B|A)"))
        self.label_title_bayes.setText(_translate("MainWindow", "Bayes"))
        self.tab_list.setTabText(self.tab_list.indexOf(self.tab_bayes), _translate("MainWindow", "Bayes"))
